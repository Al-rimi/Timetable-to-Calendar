name: Build desktop apps

on:
  workflow_dispatch:
  push:
    tags:
      - "v*"

jobs:
  build:
    name: Build ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install system Tk (Ubuntu)
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-tk

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
          python -m pip install pyinstaller

      - name: Generate version info (Windows)
        if: startsWith(matrix.os, 'windows')
        run: |
          python tools/generate_version_info.py

      - name: Build (Windows)
        if: startsWith(matrix.os, 'windows')
        run: |
          pyinstaller gui_win.spec --noconfirm

      - name: Build (macOS)
        if: startsWith(matrix.os, 'macos')
        run: |
          pyinstaller --noconfirm --windowed --name "Timetable to Calendar ZJNU" gui_win.py

      - name: Build (Linux)
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          pyinstaller --noconfirm --noconsole --onefile --name "timetable-to-calendar-zjnu" gui_win.py

      - name: Archive artifacts
        uses: actions/upload-artifact@v4
        with:
          name: app-${{ matrix.os }}
          path: |
            dist/**
            build/version_info.txt
          if-no-files-found: warn

  release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: artifacts/**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
